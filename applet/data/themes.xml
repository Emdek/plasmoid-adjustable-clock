<?xml version="1.0" encoding="UTF-8"?>
<themes>
	<theme>
		<id>default</id>
		<title>Default</title>
		<description>Default clock theme</description>
		<author>Michał Dutkiewicz</author>
		<background>true</background>
		<html><![CDATA[<!DOCTYPE html>
<html>
<body>
<div style="text-align: center;">
	<big><span id="hour">12</span>:<span id="minute">30</span>:<span id="second">15</span></big><br>
	<small><span id="day">01</span>.<span id="month">01</span>.<span id="year">2000</span></small>
</div>
</body>
</html>]]></html>
		<script><![CDATA[Clock.setRule('#hour', Clock.Hour);
Clock.setRule('#minute', Clock.Minute);
Clock.setRule('#second', Clock.Second);
Clock.setRule('#day', Clock.DayOfMonth);
Clock.setRule('#month', Clock.Month);
Clock.setRule('#year', Clock.Year);]]></script>
	</theme>
	<theme>
		<id>simple</id>
		<title>Simple</title>
		<description>Simple clock, similar to default digital clock</description>
		<author>Michał Dutkiewicz</author>
		<background>true</background>
		<html><![CDATA[<!DOCTYPE html>
<html>
<body>
<div style="text-align: center; font-size: 25px;"><span id="hour">12</span>:<span id="minute">30</span></div>
</body>
</html>]]></html>
		<script><![CDATA[Clock.setRule('#hour', Clock.Hour);
Clock.setRule('#minute', Clock.Minute);]]></script>
	</theme>
	<theme>
		<id>verbose</id>
		<title>Verbose</title>
		<description>More verbose clock with date</description>
		<author>Michał Dutkiewicz</author>
		<background>false</background>
		<html><![CDATA[<!DOCTYPE html>
<html>
<body>
<div style="text-align: center; opacity: 0.85;">
	<span style="font-size: 30px;"><span id="hour">12</span>:<span id="minute">30</span>:<span id="second">15</span></span><br>
	<span style="font-size: 12px;"><span id="dayofweek">Saturday</span>, <span id="day">01</span>.<span id="month">01</span>.<span id="year">2000</span></span>
</div>
</body>
</html>]]></html>
		<script><![CDATA[Clock.setRule('#hour', Clock.Hour);
Clock.setRule('#minute', Clock.Minute);
Clock.setRule('#second', Clock.Second);
Clock.setRule('#dayofweek', Clock.DayOfWeek, {'text': true});
Clock.setRule('#day', Clock.DayOfMonth);
Clock.setRule('#month', Clock.Month);
Clock.setRule('#year', Clock.Year);]]></script>
	</theme>
	<theme>
		<id>trainclock</id>
		<title>Train Clock</title>
		<description>Train clock like theme</description>
		<author>Nuno Pinheiro &amp; Michał Dutkiewicz</author>
		<background>false</background>
		<html><![CDATA[<!DOCTYPE html>
<html>
<head>
<style type="text/css">
.clock
{
	padding: 8px;
	width: 190px;
	border-radius: 10px;
	border-spacing: 2px;
	font-family: 'Nimbus Sans L';
	background: #202020;
	color: #DCDCDC;
}

.time
{
	display: table;
}

.time > div
{
	display: table-row;
}

.time > div > div, .card
{
	display: table-cell;
	height: 25px;
	width: 40px;
	overflow: hidden;
	position: relative;
	line-height: 0;
	font-size: 55px;
	font-weight: bold;
	text-align: center;
	background: -webkit-linear-gradient(#353535, #222 30%, #000);
}

.time > div > div > div
{
	width: 40px;
	position: absolute;
}

.time .dots
{
	width: 20px;
	line-height: 25px;
	font-size: 30px;
}

.time .hidden > div
{
	height: 0;
	overflow: visible;
}

.time .top > div > div
{
	top: 25px;
}

.date
{
	margin: 3px 0 -3px 0;
	padding: 0 5px 0 0;
	text-align: right;
	line-height: 15px;
	font-size: 15px;
}

.dark
{
	color: #1A1A1A;
}

.card
{
	display: block;
	visibility: hidden;
	position: absolute;
	top: 2px;
	z-index: 100;
	box-shadow: 0 2px 2px #333;
	-webkit-transform: scale(1, 1);
	-webkit-transition: -webkit-transform 0.5s linear, margin 0.5s linear;
}

.card span
{
	display: block;
	margin: 25px 0 0 0;
}

.final
{
	margin: 26px 0 0 0;
	visibility: visible;
	-webkit-transform: scale(1, -1);
}

.reversed
{
	-webkit-transform: scale(1, -1);
}
</style>
</head>
<body>
<div class="clock">
	<div class="time">
		<div class="hidden">
			<div><div class="card"><span id="c_0_3">4</span></div></div>
			<div><div class="card"><span id="c_1_3">4</span></div></div>
			<div class="dots"></div>
			<div><div class="card"><span id="c_2_3">4</span></div></div>
			<div><div class="card"><span id="c_3_3">4</span></div></div>
		</div>
		<div class="top">
			<div><div id="c_0_1">1</div></div>
			<div><div id="c_1_1">2</div></div>
			<div id="dot_top" class="dots">•</div>
			<div><div id="c_2_1">3</div></div>
			<div><div id="c_3_1">0</div></div>
		</div>
		<div class="bottom">
			<div><div id="c_0_2">1</div></div>
			<div><div id="c_1_2">2</div></div>
			<div id="dot_bottom" class="dots">•</div>
			<div><div id="c_2_2">3</div></div>
			<div><div id="c_3_2">0</div></div>
		</div>
	</div>
	<div class="date"><span id="day">1</span> <span id="month">of January</span></div>
</div>
</body>
</html>]]></html>
		<script><![CDATA[function updateClock()
{
	var blink = (Clock.toString(Clock.Second, {'short': true}) % 2);

	document.getElementById('dot_top').setAttribute('class', 'dots' + (blink?'':' dark'));
	document.getElementById('dot_bottom').setAttribute('class', 'dots' + (blink?'':' dark'));

	var hour = Clock.toString(Clock.Hour);
	var minute = Clock.toString(Clock.Minute);
	var values = [hour.substr(0, 1), hour.substr(1, 1), minute.substr(0, 1), minute.substr(1, 1)];

	for (var i = 0; i < values.length; ++i)
	{
		if (document.getElementById('c_' + i + '_1').innerHTML != values[i])
		{
			flipCard(i, values[i]);
		}
	}
}

function flipCard(number, value)
{
	var old = document.getElementById('c_' + number + '_1').innerHTML;
	var card = document.getElementById('c_' + number + '_3');

	document.getElementById('c_' + number + '_1').innerHTML = value;

	card.innerHTML = old;
	card.setAttribute('class', '');
	card.parentNode.style.display = 'block';
	card.parentNode.setAttribute('class', 'card final');

	setTimeout(function() {
		card.innerHTML = value;
		card.setAttribute('class', 'reversed');

		setTimeout(function() {
			document.getElementById('c_' + number + '_2').innerHTML = value;

			card.parentNode.style.display = 'none';
			card.parentNode.setAttribute('class', 'card');

			setTimeout(function() {
				card.parentNode.style.display = 'block';
				}, 1);
		}, 250);
	}, 250);
}

var hour = Clock.toString(Clock.Hour);
var minute = Clock.toString(Clock.Minute);
var values = [hour.substr(0, 1), hour.substr(1, 1), minute.substr(0, 1), minute.substr(1, 1)];

for (var i = 0; i < values.length; ++i)
{
	document.getElementById('c_' + i + '_1').innerHTML = values[i];
	document.getElementById('c_' + i + '_2').innerHTML = values[i];
}

Clock.setRule('#day', Clock.DayOfMonth, {'short': true});
Clock.setRule('#month', Clock.Month, {'text': true, 'possessive': false});

document.addEventListener('ClockSecondChanged', updateClock);]]></script>
	</theme>
	<theme>
		<id>digitalclock</id>
		<title>Digital Clock</title>
		<description>Digital clock theme</description>
		<author>Michał Dutkiewicz</author>
		<background>false</background>
		<html><![CDATA[<!DOCTYPE html>
<html>
<head>
<style type="text/css">
.clock
{
	margin:1px 3px;
	white-space: nowrap;
}

.digit
{
	display: inline-block;
	width: 30px;
	height: 60px;
	position: relative;
}

.digit > div
{
	border: 4px solid #000;
	position: absolute;
}

.digit .segment_1
{
	width: 18px;
	border-color: #000 transparent transparent;
	top: 2px;
	left: 2px;
}

.digit .segment_2, .digit .segment_3
{
	width: 0;
	height: 19px;
	border-color:transparent #000  transparent transparent;
	left: 21px;
}

.digit .segment_2
{
	border-width: 4px 4px 3px 4px;
	top: 3px;
}

.digit .segment_3
{
	border-width: 3px 4px 4px 4px;
}

.digit .segment_4
{
	width: 18px;
	border-color: transparent transparent #000 transparent;
	top: 50px;
	left: 2px;
}

.digit .segment_5, .digit .segment_6
{
	width: 0;
	height: 19px;
	border-color: transparent transparent transparent #000;
	left: 1px;
}

.digit .segment_5
{
	border-width: 3px 4px 4px 4px;
}

.digit .segment_6
{
	border-width: 4px 4px 3px 4px;
	top: 3px;
}

.digit .segment_3, .digit .segment_5
{
	top: 31px;
}

.digit .segment_7
{
	width: 26px;
	border: 0;
	top: 26px;
	left: 2px;
}

.digit .segment_7 > div
{
	border: 2px solid #000;
	border-width: 2px 3px;
}

.digit .segment_7 div:first-child
{
	border-color: transparent transparent #000 transparent;
}

.digit .segment_7 div:last-child
{
	border-color: #000 transparent transparent;
}

#dots
{
	display:inline-block;
	width: 30px;
	height: 30px;
	padding: 0 0 30px 0;
	font-size: 45px;
	text-align: center;
}
</style>
</head>
<body>
<div class="clock">
	<div class="digit" id="digit_0">
		<div class="segment_1"></div>
		<div class="segment_2"></div>
		<div class="segment_3"></div>
		<div class="segment_4"></div>
		<div class="segment_5"></div>
		<div class="segment_6"></div>
		<div class="segment_7">
			<div></div>
			<div></div>
		</div>
	</div>
	<div class="digit" id="digit_1">
		<div class="segment_1"></div>
		<div class="segment_2"></div>
		<div class="segment_3"></div>
		<div class="segment_4"></div>
		<div class="segment_5"></div>
		<div class="segment_6"></div>
		<div class="segment_7">
			<div></div>
			<div></div>
		</div>
	</div>
	<div id="dots">:</div>
	<div class="digit" id="digit_2">
		<div class="segment_1"></div>
		<div class="segment_2"></div>
		<div class="segment_3"></div>
		<div class="segment_4"></div>
		<div class="segment_5"></div>
		<div class="segment_6"></div>
		<div class="segment_7">
			<div></div>
			<div></div>
		</div>
	</div>
	<div class="digit" id="digit_3">
		<div class="segment_1"></div>
		<div class="segment_2"></div>
		<div class="segment_3"></div>
		<div class="segment_4"></div>
		<div class="segment_5"></div>
		<div class="segment_6"></div>
		<div class="segment_7">
			<div></div>
			<div></div>
		</div>
	</div>
</div>
<script type="text/javascript">
</script>
</body>
</html>]]></html>
		<script><![CDATA[function updateClock()
{
	var hour = Clock.toString(Clock.Hour);
	var minute = Clock.toString(Clock.Minute);
	var values = [hour.substr(0, 1), hour.substr(1, 1), minute.substr(0, 1), minute.substr(1, 1)];

	document.getElementById('dots').style.visibility = ((Clock.toString(Clock.Second, {'short': true}) % 2)?'visible':'hidden');

	for (var i = 0; i < values.length; ++i)
	{
		var digit = document.getElementById('digit_' + i);

		digit.getElementsByClassName('segment_1')[0].style.visibility = ((values[i] != 1 && values[i] != 4)?'visible':'hidden');
		digit.getElementsByClassName('segment_2')[0].style.visibility = ((values[i] != 5 && values[i] != 6)?'visible':'hidden');
		digit.getElementsByClassName('segment_3')[0].style.visibility = ((values[i] != 2)?'visible':'hidden');
		digit.getElementsByClassName('segment_4')[0].style.visibility = ((values[i] != 1 && values[i] != 4 && values[i] != 7)?'visible':'hidden');
		digit.getElementsByClassName('segment_5')[0].style.visibility = ((values[i] != 1 && values[i] != 3 && values[i] != 4 && values[i] != 5 && values[i] != 7 && values[i] != 9)?'visible':'hidden');
		digit.getElementsByClassName('segment_6')[0].style.visibility = ((values[i] != 1 && values[i] != 2 && values[i] != 3 && values[i] != 7)?'visible':'hidden');
		digit.getElementsByClassName('segment_7')[0].style.visibility = ((values[i] != 0 && values[i] != 1 && values[i] != 7)?'visible':'hidden');
	}
}

function updateTheme()
{
	var color = window.getComputedStyle(document.body).getPropertyValue('color');
	var rules = document.styleSheets[0].cssRules;
	
	for (var index in rules)
	{
		if (rules[index].style && rules[index].style.getPropertyValue('border-color'))
		{
			rules[index].style.setProperty('border-color', rules[index].style.getPropertyValue('border-color').replace(/rgb\([0-9, ]+\)/, color));
		}
	}
}

updateClock();
updateTheme();

document.addEventListener('ClockSecondChanged', updateClock);
document.addEventListener('ClockThemeChanged', updateTheme);]]></script>
	</theme>
	<theme>
		<id>dbclock</id>
		<title>dbClock</title>
		<description>dbClock like theme</description>
		<author>Michał Dutkiewicz</author>
		<background>false</background>
		<html><![CDATA[<!DOCTYPE html>
<html>
<head>
<style type="text/css">
.clock
{
	height: 50px;
}

.clock div
{
	margin: -10px 0 5px 5px;
	white-space: pre;
	text-align: center;
	font-size: 25px;
	-webkit-box-reflect: below -5px -webkit-gradient(linear, left top, left bottom, from(transparent), color-stop(0.5, transparent), to(white));
}

.clock #second
{
	position: relative;
	left: -8px;
	top: 4px;
	z-index: -1;
	font-size: 30px;
	opacity: 0.5;
}
</style>
</head>
<body>
<div class="clock">
	<div><span id="hour">12</span>:<span id="minute">30</span><span id="second">15</span></div>
</div>
</body>
</html>]]></html>
		<script><![CDATA[Clock.setRule('#hour', Clock.Hour);
Clock.setRule('#minute', Clock.Minute);
Clock.setRule('#second', Clock.Second);]]></script>
	</theme>
	<theme>
		<id>beclock</id>
		<title>beClock</title>
		<description>beClock like theme</description>
		<author>Thomas Luebking &amp; Michał Dutkiewicz</author>
		<background>false</background>
		<html><![CDATA[<!DOCTYPE html>
<html>
<head>
<style type="text/css">
.clock
{
	width: 200px;
	height: 200px;
	margin: auto;
	position: relative;
}

.clock > div
{
	width: 200px;
	position: absolute;
	text-align: center;
}

.clock .back
{
	z-index: 1;
	top: 50px;
	font-size: 75px;
	font-weight: bold;
	text-transform: uppercase;
	opacity: 0.3;
}

.clock .front
{
	z-index: 2;
	top: 60px;
	font-size: 40px;
	line-height: 40px;
}

.clock .front div
{
	font-size: 20px;
	line-height: 25px;
}
</style>
</head>
<body>
<div class="clock">
	<canvas id="canvas" width="200" height="200"></canvas>
	<div id="timeofday" class="back"></div>
	<div class="front">
		<span id="hour">12</span>:<span id="minute">30</span>
		<div><span id="year">2000</span>-<span id="month">01</span>-<span id="day">01</span></div>
	</div>
</div>
</body>
</html>]]></html>
		<script><![CDATA[function updateClock()
{
	var context = document.getElementById('canvas').getContext('2d');

	context.lineCap = 'round';
	context.lineWidth = 8;
	context.strokeStyle = window.getComputedStyle(document.body).getPropertyValue('color');

	context.clearRect(0, 0, 200, 200);

	context.beginPath();
	context.arc(100, 100, 95, ((Math.PI / 180) * -90), (((Math.PI / 180) * (parseInt(Clock.toString(Clock.Minute, {'short': true})) - 15) * 6)), false);
	context.globalAlpha = 0.5;
	context.stroke();

	context.beginPath();
	context.arc(100, 100, 80, ((Math.PI / 180) * -90), (((Math.PI / 180) * (parseInt(Clock.toString(Clock.Hour, {'short': true})) - 15) * 30)), false);
	context.globalAlpha = 0.8;
	context.stroke();
}

updateClock();

Clock.setRule('#hour', Clock.Hour, {'alternative': true});
Clock.setRule('#minute', Clock.Minute);
Clock.setRule('#second', Clock.Second);
Clock.setRule('#day', Clock.DayOfMonth);
Clock.setRule('#month', Clock.Month);
Clock.setRule('#year', Clock.Year);
Clock.setRule("#timeofday", Clock.TimeOfDay);

document.addEventListener('ClockMinuteChanged', updateClock);
document.addEventListener('ClockThemeChanged', updateClock);]]></script>
	</theme>
	<theme>
		<id>progress</id>
		<title>Progress</title>
		<description>Clock with original second visualization</description>
		<author>Peter Fajdiga &amp; Michał Dutkiewicz</author>
		<background>false</background>
		<html><![CDATA[<!DOCTYPE html>
<html>
<head>
<style type="text/css">
*
{
	font-family: 'Segoe WP';
	font-weight: bold;
	color: #fff;
}

progress
{
	width: 100%;
	height: 5px;
	border: 0;
	position: relative;
	bottom: 15px;
	background: transparent;
	opacity: 0.6;
}

progress::-webkit-progress-bar
{
	background: rgba(230, 230, 230, 0.2);
	border-radius: 3px;
	box-shadow: 2px 2px 0 rgba(0, 0, 0, 0.1);
}

progress::-webkit-progress-value
{
	background: #ddd;
	border-radius: 3px;
	box-shadow: 2px 2px 0 rgba(0, 0, 0, 0.3);
}

.clock
{
	width: 120px;
	padding: 3px;
	text-shadow: 2px 2px rgba(0, 0, 0, 0.3);
}

.clock div
{
	float: right;
}

.clock #minute
{
	font-size: 30px;
	opacity: 0.8;
}

.clock p
{
	margin: 0 45px 0 0;
	text-align: right;
	font-size: 50px;
	opacity: 0.9;
}
</style>
</head>
<body>
<div class="clock">
	<div>
		<span id="minute">30</span><br>
		<progress id="second" value="15" max="59">
	</div>
	<p id="hour">12</p>
</div>
</body>
</html>]]></html>
		<script><![CDATA[Clock.setRule('#hour', Clock.Hour, {'short': true});
Clock.setRule('#minute', Clock.Minute);
Clock.setRule('#second', 'value', Clock.Second, {'short': true});
]]></script>
	</theme>
	<theme>
		<id>binary</id>
		<title>Binary</title>
		<description>Classic binary clock</description>
		<author>Michał Dutkiewicz</author>
		<background>true</background>
		<html><![CDATA[<!DOCTYPE html>
<html>
<head>
<style type="text/css">
.clock, .clock td
{
	margin: auto;
	border: 1px solid #ddd;
}

.clock
{
	width: 67px;
	height: 45px;
	border-width: 1px 1px 0 0;
	border-spacing: 0;
	empty-cells: show;
}

.clock td
{
	width: 10px;
	height: 10px;
	border-width: 0 0 1px 1px;
}
</style>
</head>
<body>
<span id="test"></span><table class="clock">
	<tbody>
		<tr>
			<td id="v_0_8"></td>
			<td id="v_1_8"></td>
			<td id="v_2_8"></td>
			<td id="v_3_8"></td>
			<td id="v_4_8"></td>
			<td id="v_5_8"></td>
		</tr>
		<tr>
			<td id="v_0_4"></td>
			<td id="v_1_4"></td>
			<td id="v_2_4"></td>
			<td id="v_3_4"></td>
			<td id="v_4_4"></td>
			<td id="v_5_4"></td>
		</tr>
		<tr>
			<td id="v_0_2"></td>
			<td id="v_1_2"></td>
			<td id="v_2_2"></td>
			<td id="v_3_2"></td>
			<td id="v_4_2"></td>
			<td id="v_5_2"></td>
		</tr>
		<tr>
			<td id="v_0_1"></td>
			<td id="v_1_1"></td>
			<td id="v_2_1"></td>
			<td id="v_3_1"></td>
			<td id="v_4_1"></td>
			<td id="v_5_1"></td>
		</tr>
	</tbody>
</table>
</body>
</html>]]></html>
		<script><![CDATA[function updateClock()
{
	var color = window.getComputedStyle(document.body).getPropertyValue('color');
	var hour = Clock.toString(Clock.Hour);
	var minute = Clock.toString(Clock.Minute);
	var second = Clock.toString(Clock.Second);
	var values = [hour.substr(0, 1), hour.substr(1, 1), minute.substr(0, 1), minute.substr(1, 1), second.substr(0, 1), second.substr(1, 1)];

	for (var i = 0; i < values.length; ++i)
	{
		for (var j = 1; j < 9; j *= 2)
		{
			document.getElementById('v_' + i + '_' + j).style.backgroundColor = ((values[i] & j) ? color : 'transparent');
		}
	}
}

updateClock();

document.addEventListener('ClockSecondChanged', updateClock);
document.addEventListener('ClockThemeChanged', updateClock);]]></script>
	</theme>
	<theme>
		<id>calendar</id>
		<title>Calendar</title>
		<description>Calendar like theme</description>
		<author>Michał Dutkiewicz</author>
		<background>false</background>
		<html><![CDATA[<!DOCTYPE html>
<html>
<head>
<style type="text/css">
.clock
{
	width: 295px;
	min-height: 295px;
	margin: auto;
	text-shadow: 0 0 5px #AAA;
}

.clock *
{
	color: #fff !important;
}

.calendar
{
	margin: 30px 0 0 0;
	padding: 30px 20px 20px 20px;
	position: relative;
	font-weight: bold;
	font-size: 30px;
	text-align: center;
	background: -webkit-gradient(linear, left top, left bottom, from(#E5702B), to(#A33B03));
	border-radius: 20px;
	box-shadow: 5px 5px 15px #888;
	opacity: 0.7;
}

.decor
{
	position: absolute;
	top: -30px;
	left: -10px;
	width: 310px;
	height: 60px;
	padding: 10px 20px;
}

.decor div
{
	width: 13px;
	height: 40px;
	margin: 0 16px;
	float: left;
	background: -webkit-gradient(linear, left top, left bottom, color-stop(0, #757575), color-stop(0.5, #F7F7F7), color-stop(1, #757575));
	border: 1px solid #999;
	box-shadow: 0 0 5px #AAA;
}
</style>
</head>
<body>
<div class="clock">
	<div class="calendar">
		<span id="dayofweek">Saturday</span><br>
		<span style="font-size: 130px; line-height: 140px;" id="day">1</span><br>
			<span style="font-size: 35px;"><span id="month">January</span> <span id="year">2000</span></span><br>
		<span id="holiday"></span>
		<div class="decor">
			<div></div>
			<div></div>
			<div></div>
			<div></div>
			<div></div>
			<div></div>
		</div>
	</div>
</div>
</body>
</html>]]></html>
		<script><![CDATA[Clock.setRule('#day', Clock.DayOfMonth, {'short': true});
Clock.setRule('#dayofweek', Clock.DayOfWeek, {'text': true});
Clock.setRule('#month', Clock.Month, {'text': true, 'possessive': false});
Clock.setRule('#year', Clock.Year);
Clock.setRule('#holiday', Clock.Holidays, {'short': true});]]></script>
	</theme>
	<theme>
		<id>vertical</id>
		<title>Vertical</title>
		<description>Clock theme for a vertical panel</description>
		<author>Olaf Lenz</author>
		<background>true</background>
		<html><![CDATA[<!DOCTYPE html>
<html>
<head>
<style type="text/css">
</style>
</head>
<body>
<div style="margin: 5px; text-align: center;">
	<big><b><span id="hour">12</span>:<span id="minute">30</span></b></big><br>
	<span id="second">15</span><br>
	<small id="dayofweek">Sat</small><br>
	<small><span id="day">1</span>.<span id="month"></span>.</small><br>
	<small id="year">2000</small>
</div>
</body>
</html>]]></html>
		<script><![CDATA[Clock.setRule('#hour', Clock.Hour);
Clock.setRule('#minute', Clock.Minute);
Clock.setRule('#second', Clock.Second);
Clock.setRule('#dayofweek', Clock.DayOfWeek, {'short': true, 'text': true});
Clock.setRule('#day', Clock.DayOfMonth, {'short': true});
Clock.setRule('#month', Clock.Month, {'short': true});
Clock.setRule('#year', Clock.Year);]]></script>
	</theme>
</themes>
